package syx.controller;

/**
 * 建造者模式(也就是Bulider模式)
 *
 * @author syx
 * @version 1.0
 * @since 2020/10/23 9:35
 */
public class BuilderPattern {

    /**
     * 定义:
         * 将一个复杂对象的构造与它的表示分离,使同样的构建过程可以创建不同的表示
         * 也就是说,它是将一个复杂的对象分解为多个简单的对象,然后一步一步构建而成.
         * 它将变与不变相分离,即产品的组成部分是不变的,但每一部分可以灵活选择
     * 优缺点
     *  1.优点
     *      1) 封装性好,构建和表示分离
     *      2) 扩展性好,各个具体的建造者相互独立,有利于系统的解耦
     *      3) 客户端不必知道产品内部组成的细节,建造者可以对创建过程逐步细化,而不对其他模块产生任何影响,便于控制细节风险
     *  2.缺点
     *      1) 产品组成部分必须相同,限制了使用范围
     *      2) 后期维护成本较大
     */
    public static void main(String[] args) {

    }

}
